spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        query.in_clause_parameter_padding: true
        storage_engin: innodb
        hbm2ddl:
          auto: create
        show_sql: true
        format_sql: true

  sql:
    init:
      platform: mysql
      schema-locations: classpath:sql/schema_new.sql, classpath:org/springframework/security/oauth2/client/oauth2-client-schema.sql
      data-locations: classpath:sql/data_new.sql
      encoding: UTF-8

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
            scope: profile_nickname, profile_image
            redirect-uri: ${OAUTH2_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

logging.level:
  org.hibernate.SQL: debug

server:
  port: 8080
#  ssl:
#    key-store: classpath:keystore.p12
#    key-store-type: PKCS12
#    key-store-password: sktkddnjs
  servlet:
    encoding:
      force: true
      charset: UTF-8

cloud:
  aws:
    credentials:
      accessKey: ${S3_ACCESSKEY}
      secretKey: ${S3_SECRETKEY}
    s3:
      bucket: ${S3_BUCKET}
    region:
      static: ${S3_REGION}
    stack:
      auto: false

jwt:
  header: token
  issuer: alchomist
  client-secret: ${JWT_CLIENT_SECRET}
  expiry-seconds: 3600

